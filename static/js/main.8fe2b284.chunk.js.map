{"version":3,"sources":["constants.ts","components/Article.tsx","components/Markdown.tsx","data.ts","components/CTACard.tsx","components/CustomCard.tsx","components/Gallery.tsx","pages/Home.tsx","pages/Introduction.tsx","pages/GettingStarted.tsx","pages/Tutorials.tsx","pages/PreliminarySkills.tsx","components/Navbar.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ASSETS_URL","process","env","NODE_ENV","MARKDOWN_ASSETS_URL","NOTEBOOK_ASSETS_URL","DATASET_ASSETS_URL","useStyles","makeStyles","theme","createStyles","article","margin","padding","width","backgroundColor","Article","props","classes","Paper","elevation","className","children","CodeComponent","useState","collapsed","setCollapsed","IconButton","onClick","Collapse","in","DownloadButton","Button","component","color","variant","href","style","target","download","GetApp","Markdown","markdownAsString","setMarkdownAsString","fetchMarkdown","a","url","getCleanedFileURL","toFetch","fetch","res","text","resText","fileName","useEffect","components","code","node","inline","match","exec","String","float","marginLeft","FileCopy","dark","language","PreTag","replace","display","flexDirection","justifyContent","version","dataset","skipHtml","remarkPlugins","remarkMath","rehypePlugins","rehypeRaw","rehypeKatex","tutorials","img","title","content","description","notebook","skills","linkTo","card","alignItems","flexWrap","palette","background","paper","CTACard","hovering","setHovering","secondary","onMouseEnter","onMouseLeave","Link","to","buttonText","KeyboardArrowRightOutlined","minWidth","height","objectFit","border","borderColor","splash","CustomCard","Card","CardMedia","media","image","CardContent","CardActions","OpenInNew","gallery","Gallery","cards","map","skill","key","backgroundImage","position","top","bottom","left","right","opacity","zIndex","backgroundSize","overlay","Home","Introduction","src","alt","rel","Tutorials","PreliminarySkills","heading","bar","links","ButtonAppBar","AppBar","Toolbar","RouterLink","root","overflow","grid","siteTag","marginBottom","linkTag","paddingRight","Footer","createMuiTheme","primary","light","main","contrastText","App","ThemeProvider","Container","exact","path","GettingStarted","tutorial","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fe2b284.chunk.js","sourcesContent":["import process from \"process\";\n\nexport const IS_DEV: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\nexport const ASSETS_URL = \"https://raw.githubusercontent.com/CSC466-Team7/csc466_project/main\";\n\nexport const MARKDOWN_ASSETS_URL = `${ASSETS_URL}/code/markdown`;\nexport const NOTEBOOK_ASSETS_URL = `${ASSETS_URL}/code/notebooks`;\nexport const DATASET_ASSETS_URL = `${ASSETS_URL}/datasets`;","import { Paper } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    article: {\n      margin: \"25px auto\",\n      padding: \"25px\",\n      width: \"80%\",\n      backgroundColor: \"whitesmoke\"\n    }\n  })\n);\n\ninterface ArticleProps {\n  children: React.ReactNode,\n}\n\nexport default function Article(props: ArticleProps) {\n  const classes = useStyles();\n  \n  return (\n    <Paper elevation={3} className={classes.article}>\n      {props.children}\n    </Paper>\n  );\n}\n","import { Button, IconButton } from \"@material-ui/core\";\nimport { FileCopy, GetApp } from \"@material-ui/icons\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport \"katex/dist/katex.min.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Collapse } from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Link } from \"react-router-dom\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport dark from \"react-syntax-highlighter/dist/esm/styles/prism/material-dark\";\n// @ts-ignore\nimport rehypeKatex from \"rehype-katex\";\n// @ts-ignore\nimport rehypeRaw from \"rehype-raw\";\n// @ts-ignore\nimport remarkMath from \"remark-math\";\nimport {\n  DATASET_ASSETS_URL,\n  MARKDOWN_ASSETS_URL,\n  NOTEBOOK_ASSETS_URL\n} from \"../constants\";\nimport Article from \"./Article\";\nimport \"./Markdown.scss\";\n\nfunction CodeComponent(props: any) {\n  const [collapsed, setCollapsed] = useState(true);\n  \n  const changeCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n  \n  return (\n    <div className=\"collapsable\">\n      <IconButton\n        className=\"collapse-btn\"\n        onClick={changeCollapsed}>\n        {!collapsed ?\n          <AddIcon/> :\n          <RemoveIcon/>\n        }\n      </IconButton>\n      \n      {!collapsed && <code className=\"hidden-text\">Hidden</code>}\n      \n      <Collapse in={collapsed}>\n        <div className=\"collapse-custom\">\n          <code\n            className={props.className}\n            children={props.children} {...props} />\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DownloadButton(props: { href: string; children: React.ReactNode; }) {\n  return (\n    <Button\n      component=\"a\"\n      color=\"primary\"\n      variant=\"contained\"\n      href={props.href}\n      style={{margin: 10}}\n      target={\"_blank\"}\n      download\n    >\n      <GetApp/>\n      {props.children}\n    </Button>\n  );\n}\n\nexport default function Markdown(props: { fileName: string; version?: string; dataset?: string; }) {\n  const [markdownAsString, setMarkdownAsString] = useState(\"\");\n  \n  const fetchMarkdown = async () => {\n    const url = getCleanedFileURL();\n    // Switch when testing locally\n    // const file = await\n    // import(\"../markdown/heart_decision_tree_classifier.md\"); const toFetch =\n    // file.default;\n    const toFetch = url;\n    const res = await fetch(toFetch);\n    const resText = await res.text();\n    setMarkdownAsString(resText);\n  };\n  \n  const getPythonNotebookFileUrl = () => {\n    return `${NOTEBOOK_ASSETS_URL}/${props.fileName}.ipynb`;\n  };\n  \n  const getCleanedFileURL = () => {\n    return `${MARKDOWN_ASSETS_URL}/${props.fileName}_cleaned.md`;\n  };\n  \n  const getOriginalFileURL = () => {\n    return `${MARKDOWN_ASSETS_URL}/${props.fileName}_original.md`;\n  };\n  \n  useEffect(() => {\n    fetchMarkdown();\n  }, []);\n  \n  const components: any = {\n    // @ts-ignore\n    code({node, inline, className, children, ...props}) {\n      const match = /language-(\\w+)/.exec(className || \"\");\n      \n      if (!inline && match) {\n        return (\n          <span>\n            <CopyToClipboard text={String(children)}>\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                style={{float: \"right\", marginLeft: 10}}>\n                <FileCopy/>\n              </IconButton>\n            </CopyToClipboard>\n            <SyntaxHighlighter\n              style={dark} language={match[1]} PreTag=\"div\"\n              children={\n                String(children)\n                  .replace(/\\n$/, \"\")\n              }\n              {...props} />\n          </span>\n        );\n      }\n      else if (!inline && !match) {\n        return (\n          <CodeComponent className={className} children={children} {...props} />\n        );\n      }\n      \n      return (\n        <code\n          className={className}\n          children={children} {...props} />\n      );\n    }\n  };\n  return (\n    <Article>\n      <div style={{\n        margin: 10,\n        padding: 10,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n      }}>\n        <DownloadButton href={getPythonNotebookFileUrl()}>\n          Download Python Notebook\n        </DownloadButton>\n        \n        {props?.version === \"original\" ? (\n          <DownloadButton href={getCleanedFileURL()}>\n            Download Cleaned\n          </DownloadButton>\n        ) : (\n          <DownloadButton href={getOriginalFileURL()}>\n            Download Full\n          </DownloadButton>\n        )}\n        \n        {props.dataset &&\n        <DownloadButton href={`${DATASET_ASSETS_URL}/${props.dataset}`}>\n          Download Dataset\n        </DownloadButton>\n        }\n      </div>\n      <article className=\"markdown-body\" style={{margin: 0, padding: 0}}>\n        <ReactMarkdown\n          components={components}\n          skipHtml={false}\n          remarkPlugins={[remarkMath]}\n          rehypePlugins={[rehypeRaw, rehypeKatex]}>{markdownAsString}</ReactMarkdown>\n      </article>\n    </Article>\n  );\n}","export const tutorials = [\n  /*Decision Tree Algorithm*/\n  {\n    img: {\n      url: \"https://miro.medium.com/max/781/1*fGX0_gacojVa6-njlCrWZw.png\",\n      title: \"Decision Tree Visual\"\n    },\n    content: {\n      title: \"Decision Tree Algorithm\",\n      description:\n        \"Learn how to implement a decision tree from scratch with Python\"\n    },\n    notebook: \"heart_decision_tree_classifier\"\n  },\n  /*Scikit Learn Classifier*/\n  {\n    img: {\n      url: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Scikit_learn_logo_small.svg/1200px-Scikit_learn_logo_small.svg.png\",\n      title: \"Scitkit Learn Logo\"\n    },\n    content: {\n      title: \"Scikit Learn Classifier\",\n      description:\n        \"Using the decision tree classifier we implemented in the previous tutorial, we can transform that into a classifier that works with sklearn\"\n    },\n    notebook: \"heart_classifier_with_sklearn\"\n  },\n  /*Bagging and Random Forests*/\n  {\n    img: {\n      url: \"https://miro.medium.com/max/1052/1*VHDtVaDPNepRglIAv72BFg.jpeg\",\n      title: \"Random Forests\"\n    },\n    content: {\n      title: \"Bagging and Random Forests\",\n      description:\n        \"Using what we know about decision trees, learn how to make more\" +\n        \" powerful models by leveraging bagging and random forests\"\n    },\n    notebook: \"bagging_and_random_forests\"\n  }];\n\nexport const skills = [\n  {\n    img: {\n      url: \"https://www.megahowto.com/wp-content/uploads/2009/09/Rubix-Cube.jpg\",\n      title: \"a rubix cube\"\n    },\n    content: {\n      title: \"Numpy\",\n      description:\n        \"A library for easily handling multi-dimensional arrays and matrices\"\n    },\n    linkTo: \"https://numpy.org/doc/stable/user/absolute_beginners.html\"\n  },\n  {\n    img: {\n      url: \"https://cameoglassuk.co.uk/wp-content/uploads/2016/07/EATING-PANDAS-1.jpg\",\n      title: \"pandas eating bamboo\"\n    },\n    content: {\n      title: \"Pandas\",\n      description:\n        \"A library for powerful data analysis and manipulation.\"\n    },\n    linkTo: \"https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html\"\n  },\n  {\n    img: {\n      url: \"https://miro.medium.com/max/1000/1*0DDt5Xp9z6ecj5eL6FNAfQ.png\",\n      title: \"data clustering example\"\n    },\n    content: {\n      title: \"Scikit Learn\",\n      description:\n        \"A library that makes ML processes (like dimensionality reduction)\" +\n        \" easy.\"\n    },\n    linkTo: \"https://scikit-learn.org/stable/tutorial/index.html\"\n  }\n];","import { Button, Paper } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { KeyboardArrowRightOutlined } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      margin: \"25px auto\",\n      width: \"80%\",\n      padding: \"12px 20px\",\n      backgroundColor: theme.palette.background.paper\n    }\n  })\n);\n\ninterface CTAProps {\n  title: string,\n  description: string,\n  buttonText: string,\n  linkTo: string,\n  secondary? : boolean\n}\n\nexport default function CTACard(props: CTAProps) {\n  const [hovering, setHovering] = useState(false);\n  const classes = useStyles();\n  \n  return (\n    <Paper\n      className={classes.card}\n      elevation={hovering ? 24 : 6}\n      variant={props.secondary ? \"outlined\" : \"elevation\"}\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}>\n      <div>\n        <h2>{props.title}</h2>\n        <p>{props.description}</p>\n      </div>\n      <Button\n        component={Link}\n        color=\"primary\"\n        variant=\"contained\"\n        to={props.linkTo}\n      >\n        {props.buttonText}\n        <KeyboardArrowRightOutlined/>\n      </Button>\n    </Paper>\n  );\n}\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { KeyboardArrowRightOutlined, OpenInNew } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      width: \"30%\",\n      minWidth: \"300px\",\n      margin: \"15px\"\n    },\n    \"media\": {\n      height: \"240px\",\n      width: \"100%\",\n      display: \"block\",\n      objectFit: \"cover\",\n      border: \"3px solid\",\n      borderColor: \"#4a4848\"\n    },\n    splash: {\n      display: \"block\",\n      margin: \"40px auto\"\n    }\n  })\n);\n\nexport interface CardProps {\n  img: {\n    url: string,\n    title: string,\n  },\n  content: {\n    title: string,\n    description: string\n  },\n  linkTo?: string,\n  notebook?: string\n}\n\nexport default function CustomCard(props: CardProps) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={props.img.url}\n        title={props.img.title}\n      />\n      <CardContent>\n        <h3>{props.content.title}</h3>\n        <p>{props.content.description}</p>\n      </CardContent>\n      <CardActions>\n        {/*If external link...*/}\n        {props.linkTo &&\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          href={props.linkTo}\n          style={{margin: 10}}\n          target=\"_blank\">\n          View Tutorial\n          <OpenInNew/>\n        </Button>}\n        {/*If link to notebook...*/}\n        {props.notebook && <Button\n          component={Link}\n          color=\"primary\"\n          variant=\"contained\"\n          to={`/${props.notebook}`}\n          style={{margin: 10}}>\n          View Tutorial\n          <KeyboardArrowRightOutlined/>\n        </Button>}\n      \n      </CardActions>\n    </Card>\n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport CustomCard, { CardProps } from \"./CustomCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gallery: {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      flexWrap: \"wrap\"\n    }\n  })\n);\n\ninterface GalleryProps {\n  cards: CardProps[]\n}\n\nexport default function Gallery(props: GalleryProps) {\n  const classes = useStyles();\n  \n  return (\n    <div className={classes.gallery}>\n      {props.cards.map((skill =>\n        <CustomCard\n          {...skill}\n          key={skill.content.title}/>\n      ))}\n    </div>\n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nimport CTACard from \"../components/CTACard\";\nimport Gallery from \"../components/Gallery\";\nimport { tutorials } from \"../data\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      width: \"30%\",\n      minWidth: \"300px\",\n      margin: \"10px 8px\"\n    },\n    media: {\n      height: \"240px\"\n    },\n    splash: {\n      display: \"block\",\n      margin: \"40px auto\",\n      width: \"80%\",\n      backgroundColor: \"#cccccc\"\n    },\n    backgroundImage: {\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.25,\n      zIndex: -100,\n      height: \"100%\",\n      background: \"url(https://www.decadeonrestoration.org/themes/unrestore/images/tree.jpg) no-repeat center center fixed\",\n      backgroundSize: \"cover\"\n    },\n    overlay: {\n      position: \"fixed\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      opacity: 0.35,\n      zIndex: -100,\n      height: \"100%\",\n      backgroundColor: \"#000000\",\n      backgroundSize: \"cover\"\n    }\n  })\n);\n\nexport default function Home() {\n  const classes = useStyles();\n  const cardDetails = {\n    img: {\n      url: \"https://miro.medium.com/max/781/1*fGX0_gacojVa6-njlCrWZw.png\",\n      title: \"Decision Tree Visual\"\n    },\n    content: {\n      title: \"Decision Tree Algorithm\",\n      description:\n        \"Learn how to implement a decision tree from scratch with Python\"\n    },\n    linkTo: \"/#/example/1\"\n  };\n  \n  return (\n    <>\n      <div className={classes.backgroundImage}/>\n      <div className={classes.overlay}/>\n      <section>\n        <h1>Your Intro to Decision Trees</h1>\n        <p>An explainable, data-driven approach to making decisions</p>\n      </section>\n      <CTACard\n        title=\"Not sure where to start?\"\n        description=\"Learn how to use the website\"\n        buttonText=\"Get Started\"\n        linkTo=\"/getting-started\"/>\n      <CTACard\n        title=\"New to Decision Trees?\"\n        description=\"Learn the theory behind decision trees\"\n        buttonText=\"Introduction\"\n        linkTo=\"/introduction\"/>\n      <CTACard\n        title=\"Need a refresher?\"\n        description=\"Brush up on your preliminary skills\"\n        buttonText=\"Preliminary Skills\"\n        linkTo=\"/preliminary-skills\"/>\n      \n      <section>\n        <h2>Want to put it into practice?</h2>\n        <p>Follow the guides below to implement and test powerful machine\n          learning models to\n          better understand decision trees</p>\n      </section>\n      <Gallery cards={tutorials}/>\n    </>\n  );\n}\n","import { Paper } from \"@material-ui/core\";\nimport React from \"react\";\nimport Article from \"../components/Article\";\nimport CTACard from \"../components/CTACard\";\n\nexport default function Introduction() {\n  return (\n    <>\n      <section>\n        <h1>Introduction to Decision Trees</h1>\n        <p>What are decision trees? What can they be used for?</p>\n      </section>\n      \n      <Article>\n        <h2>At a high level</h2>\n        <p>\n          Decision trees provide an easy-to-follow model for making a prediction\n          given a set of features. This model is in the form of a tree, and to\n          make a prediction, we start at the root node and follow the path given\n          the features we want until we reach a leaf node.\n        </p>\n        <p>\n          This is super abstract, so let's tie it back to reality with an\n          everyday example!\n        </p>\n        \n        <h3>Choosing your outfit</h3>\n        <p>\n          Before you hop on Zoom for 5+ hours, you probably have to pick out\n          what\n          you're going to wear that day. There are many factors that may go into\n          this decision including the following\n        </p>\n        \n        <ul>\n          <li>temperature <em>(warm or cold)</em></li>\n          <li>day of the week <em>(weekday or weekend)</em></li>\n          <li>how you feel <em>(energized or lazy)</em></li>\n        </ul>\n        \n        <p>\n          As with most decisions in life, a combination of these factors go\n          into your final outfit. Depending on how you prioritize these factors,\n          you may end up with a decision tree as follows.\n        </p>\n        \n        <img\n          src={`${process.env.PUBLIC_URL}/imgs/clothing_tree.png`}\n          width=\"100%\"\n          alt=\"decision tree for deciding what to wear\"\n        />\n        \n        <p>\n          So on a lazy sunday in January, you'd probably be wearing a hoodie and\n          sweats.\n        </p>\n        \n        <h2>Creating a tree</h2>\n        <p>\n          Given a data set and a goal of creating a decision tree, we start by\n          finding features that, once a choice is made, reduces the amount of\n          entropy within the data set the most.\n        </p>\n        \n        <p>\n          Entropy, for our case, is the measure of chaos in our predictions. We\n          measure this by looking at the probability of outcomes given a current\n          set of data. Our goal when choosing a feature is to minimize the\n          overall\n          entropy, which is equivalent to maximizing information gained with\n          each\n          choice. This process is repeated until either no information is gained\n          with a choice, or there is only one outcome remaining!\n        </p>\n        \n        <p>Let's see what this looks like with a simple example</p>\n        \n        <h3>Clothing data set</h3>\n        <p>\n          For the sake of example, assume that you have been tracking what\n          you have been wearing for many days and you find the following results\n        </p>\n        \n        <table width=\"100%\">\n          <tr>\n            <th>Weather</th>\n            <th>Day of week</th>\n            <th>Energy</th>\n            <th>Clothing</th>\n          </tr>\n          \n          <tr>\n            <td>Warm</td>\n            <td>Weekday</td>\n            <td>Lazy</td>\n            <td>T-shirt</td>\n          </tr>\n          <tr>\n            <td>Warm</td>\n            <td>Weekend</td>\n            <td>Energized</td>\n            <td>Hawaiian shirt</td>\n          </tr>\n          <tr>\n            <td>Warm</td>\n            <td>Weekend</td>\n            <td>Lazy</td>\n            <td>Hawaiian shirt</td>\n          </tr>\n          \n          <tr>\n            <td>Cold</td>\n            <td>Weekday</td>\n            <td>Lazy</td>\n            <td>Hoodie</td>\n          </tr>\n          <tr>\n            <td>Cold</td>\n            <td>Weekday</td>\n            <td>Energized</td>\n            <td>Jacket</td>\n          </tr>\n          <tr>\n            <td>Cold</td>\n            <td>Weekend</td>\n            <td>Lazy</td>\n            <td>Hoodie</td>\n          </tr>\n          <tr>\n            <td>Cold</td>\n            <td>Weekend</td>\n            <td>Lazy</td>\n            <td>Hoodie</td>\n          </tr>\n        </table>\n        \n        <br/>\n        <p>\n          If we follow the idea that we're trying to reduce entropy (as seen in\n          the amount of variance in the \"clothing\" column), we may go through\n          the following process.\n        </p>\n        \n        <ol>\n          <li>\n            A warm or cold day makes the most difference initially. This is\n            how we'll split the dataset.\n          </li>\n          <li>\n            On warm days, we can see that the day of the week makes more of a\n            difference than our energy level to what we wear, so we will split\n            from here.\n            <ul>\n              <li>\n                Notice that once we make this split, there is no entropy in\n                what we will wear, so we make these clothing choices leaf nodes\n                on the tree.\n              </li>\n            </ul>\n          </li>\n          <li>\n            On cold days, we can see that energy level makes a much bigger\n            impact\n            on our clothing choice than the day of the week, so we will split\n            the data set on this feature\n            <ul>\n              <li>\n                Similiarily to warm days, once we make this split we have zero\n                entropy, so we are able to make a decision (i.e. produce a leaf\n                node)\n              </li>\n            </ul>\n          </li>\n        </ol>\n        \n        <p>\n          This process results in a decision tree like the one above! There is\n          a little more math involved in the actual production, but this\n          recursive process is what we will follow while producing our decision\n          tree!\n        </p>\n        \n        <h2>Observations</h2>\n        <p>\n          We can see from the above example that decision trees are a great way\n          to make procedural decisions in an explainable way over discrete data\n          sets. Note that there are methods for handling continuous data, namely\n          binning.\n        </p>\n        \n        <p>\n          We also have to be careful that our tree does not overfit our data set\n          by becoming extremely deep (having lots of branches). This may seem\n          like a good thing, as it will be accurate over our testing data, but\n          this serves little use in making general decisions on new data. We\n          can handle this best by limiting the depth of our tree or reducing\n          the amount of features we use.\n        </p>\n      </Article>\n      <CTACard\n        title=\"Practice time\"\n        description=\"If you're ready, see how to get hands on experience with some examples\"\n        buttonText=\"Getting Started\" linkTo=\"/getting-started\"\n        secondary={true}\n      />\n    \n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Article from \"../components/Article\";\nimport CTACard from \"../components/CTACard\";\n\nexport default function Introduction() {\n  return (\n    <>\n      <section>\n        <h1>Getting Started</h1>\n        <p>Here's what you'll need to follow along with the tutorials</p>\n      </section>\n      \n      <Article>\n        <h2>Learning about Decision Trees</h2>\n        <p>\n          The <Link to=\"tutorials\">tutorials</Link> on this site are set up in\n          such a way that, by following along, you will learn many of the\n          concepts behind decision trees. This is reflective of Cal Poly's\n          \"Learn by Doing\" methodology, which (through personal observation)\n          works quite beautifully.\n        </p>\n        \n        <p>\n          However, this style of learning is really only helpful if you have\n          a basic understanding of the concepts you are trying to learn. If\n          you're completely unfamiliar with decision trees, you should&nbsp;\n          <Link to=\"introduction\">start here</Link> to get a high level\n          overview of what we're trying to accomplish with these. Otherwise,\n          keep on reading to see how to follow along with the tutorials!\n        </p>\n        \n        <h2>Running a tutorial</h2>\n        <p>\n          Before we're able to work on an actual example, you must first&nbsp;\n          <a\n            href=\"https://jupyter.org/install#getting-started-with-the-classic-jupyter-notebook\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            install Jupyter Notebook\n          </a>. After you have successfully done that, download an example's\n          \"starting file\", and open it using Jupyter notebook.\n        </p>\n        \n        <p>\n          The starting files provide a clear learning path with helpful comments\n          to guide you down the right path while building working decision\n          trees!\n        </p>\n      </Article>\n      <CTACard\n        title={\"Working with Tutorials\"}\n        description=\"Now that you know how to get them going, it's time to get your hands dirty with code!\"\n        buttonText=\"Examples\" linkTo=\"/tutorials\"\n        secondary={true}\n      />\n    \n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  CardActions,\n  CardContent,\n  CardMedia,\n} from \"@material-ui/core\";\n\nimport Gallery from \"../components/Gallery\";\nimport { skills, tutorials } from \"../data\";\n\nexport default function Tutorials() {\n  const ex1 = {\n    url: \"https://cdn.xxl.thumbs.canstockphoto.com/number-1-sign-design-template-element-black-icon-on-transparent-background-vector-clip-art_csp44589215.jpg\",\n    title: \"the number 1\",\n  };\n\n  const ex2 = {\n    url: \"https://snapchatemojis.com/wp-content/uploads/2015/09/2-fingers.png\",\n    title: \"the number 2\",\n  };\n\n  return (\n    <>\n      <section>\n        <h2>Tutorials</h2>\n        <p>\n          Get into the learn by doing spirit with these walkthrough tutorials.\n        </p>\n      </section>\n  \n      <Gallery cards={tutorials}/>\n\n      <article>\n        <h2>Resources</h2>\n        <p>\n          Check the following out if you're having trouble working through the\n          tutorials:\n        </p>\n\n        <ul>\n          <li>\n            <Link to=\"/introduction\">Introduction to decision trees</Link>\n          </li>\n          <li>\n            <Link to=\"/preliminary-skills\">Preliminary skills refresher</Link>\n          </li>\n        </ul>\n      </article>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Gallery from \"../components/Gallery\";\nimport { skills } from \"../data\";\n\nexport default function PreliminarySkills() {\n  \n  return (\n    <>\n      <section>\n        <h2>Preliminary Skills</h2>\n        <p>\n          Need a quick brush up on some of the KDD tools used to build decesion\n          trees? Look no further!<br/>\n          Here are links to tutorials of some commonly used tools in data\n          science.\n        </p>\n      </section>\n      \n      <Gallery cards={skills}/>\n      \n      <section>\n        <p>\n          While these won't cover everything you'll need to know, hopefully\n          they can serve as a nice refresher.\n        </p>\n      </section>\n    </>\n  );\n}\n","import { AppBar, Link, Toolbar } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\n// TODO: collapse links into hamburger menu on small screen\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      color: \"white\"\n    },\n    bar: {\n      justifyContent: \"space-between\"\n    },\n    links: {\n      color: \"white\",\n      padding: \"0 12px\"\n    }\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  \n  return (\n    <AppBar position=\"static\">\n      <Toolbar className={classes.bar}>\n        <Link to=\"/\" component={RouterLink}>\n          <h3 className={classes.heading}>\n            Decision Trees\n          </h3>\n        </Link>\n        <span>\n          <Link className={classes.links} to=\"/introduction\" component={RouterLink}>\n            Introduction\n          </Link>\n          <Link className={classes.links} to=\"/tutorials\" component={RouterLink}>\n            Tutorials\n          </Link>\n          <Link className={classes.links} to=\"/preliminary-skills\" component={RouterLink}>\n            Preliminary Skills\n          </Link>\n        </span>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Grid } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      overflow: \"hidden\",\n      padding: \"40px 0\",\n    },\n    grid: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      width: \"80%\",\n      margin: \"0 auto\",\n      \"& h3 a\": {\n        color: \"white\",\n      },\n      \"& a\": {\n        display: \"block\",\n        margin: \"16px 0\",\n        color: \"#ddd\",\n      },\n      \"& div\": {\n        display: \"inline-block\",\n      },\n    },\n    siteTag: {\n      width: \"40%\",\n      minWidth: \"300px\",\n      marginBottom: \"30px\",\n    },\n    linkTag: {\n      width: \"16.6%\",\n      minWidth: \"200px\",\n      paddingRight: \"3px\",\n    },\n  }),\n);\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" component=\"footer\" className={classes.root}>\n      <div className={classes.grid}>\n        <div className={classes.siteTag}>\n          <h2>Decision Trees</h2>\n          <p>CSC 466 – Spring 2021<br />Cal Poly – Dr. Anderson</p>\n        </div>\n\n        <div className={classes.linkTag}>\n          <h3>Introduction</h3>\n          <Link to='/introduction'>Intro to Decision Trees</Link>\n          <Link to='/getting-started'>Getting Started</Link>\n        </div>\n\n        <div className={classes.linkTag}>\n          <h3>Tutorials</h3>\n          <Link to='/example/1'>Example #1</Link>\n          <Link to='/example/2'>Example #2</Link>\n        </div>\n\n        <div className={classes.linkTag}>\n          <h3>Resources</h3>\n          <Link to='/preliminary-skills'>Preliminary Skills</Link>\n          <Link\n            to=\"https://github.com/CSC466-Team7/csc466_project\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            GitHub\n          </Link>\n        </div>\n\n      </div>\n    </AppBar>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core/\";\nimport Markdown from \"./components/Markdown\";\nimport { tutorials } from \"./data\";\n\nimport Home from \"./pages/Home\";\nimport Introduction from \"./pages/Introduction\";\nimport GettingStarted from \"./pages/GettingStarted\";\nimport Tutorials from \"./pages/Tutorials\";\nimport PreliminarySkills from \"./pages/PreliminarySkills\";\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#62727b\",\n      main: \"#37474f\",\n      dark: \"#102027\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#60ad5e\",\n      main: \"#2e7d32\",\n      dark: \"#005005\",\n      contrastText: \"#000\",\n    },\n    background: {\n      paper: \"#f3f0e8\"\n    }\n  },\n});\n\nfunction App() {\n  return (\n    <HashRouter>\n      <ThemeProvider theme={theme}>\n        <Navbar />\n        <Container>\n          <Switch>\n\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/introduction\" component={Introduction} />\n            <Route path=\"/getting-started\" component={GettingStarted} />\n            <Route path=\"/preliminary-skills\" component={PreliminarySkills} />\n            <Route exact path=\"/tutorials\" component={Tutorials} />\n            {tutorials.map((tutorial) =>\n              <Route path={`/${tutorial.notebook}`}>\n                <Markdown\n                  fileName={tutorial.notebook}\n                  version=\"cleaned\"\n                  dataset=\"heart.csv\" // TODO: What id no dataset?\n                />\n              </Route>\n            )}\n          </Switch>\n        </Container>\n        <Footer />\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}